<?php

define('CAMPAIGN_BANNER_UPLOAD_DIR', 'public://blog_banner/');
define('CAMPAIGN_BANNER_SCRIPT', 'banner.php');
define('CAMPAIGN_BANNER_ID', 'campaign_banner');

/**
 * Implements hook_init().
 */
function campaign_banner_init() {
  // The page where users select their banner is not necessarily in the campaign
  // path, therefore this has to be included on every page.
  drupal_add_js(drupal_get_path('module', 'campaign_banner') . '/campaign_banner.js');
}

/**
 * Implements hook_campaign_config_info().
 */
function campaign_banner_campaign_config_info() {
  return array(
    'blog_banner' => array(
      'href' => NULL,
      'alt' => NULL,
      'images' => array(),
    ),
  );
}

/**
 * Implements hook_campaign_edit_form_alter().
 */
function campaign_banner_campaign_edit_form_alter(&$form, &$form_state, $namespace, $campaign) {
  // Figure out how many blog banner fields should be generated.
  if (empty($form_state['num_blog_banners'])) {
    // Add an extra field below existing banners.
    if (!empty($campaign['blog_banner']['images'])) {
      $form_state['num_blog_banners'] = count($campaign['blog_banner']['images']) + 1;
    }
    else {
      $form_state['num_blog_banners'] = 1;
    }
  }
  $form['#attached']['css'][] = drupal_get_path('module', 'campaign_banner') . '/campaign_banner.admin.css';

  $form['campaign']['blog_banner'] = array(
    '#type' => 'fieldset',
    '#title' => t('Blog Banner'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#tree' => TRUE,
    '#access' => user_access('administer campaigns'),
    '#weight' => 55,
    '#group' => 'campaign',
  );
  $form['campaign']['blog_banner']['help'] = array(
    '#markup' => '<p>' . t('Once done you copy paste the resulting HTML snippet into the page where your visitors can choose their banner. All JavaScript is readily set up.') . '</p>'
      . '<p>' . t('Take note, view counting cannot be disabled, even if the campaign is inactive it will continue tracking views.') . '</p>',
  );

  $form['campaign']['blog_banner']['href'] = array(
    '#type' => 'textfield',
    '#title' => t('Link address'),
    '#description' => t('The path to link banners to. E.g. %url', array(
      '%url' => campaign_get_gateway_path($namespace) . '?utm_source=banner&utm_medium=banner&utm_campaign=' . $namespace,
    )),
    '#maxlength' => 255,
    '#default_value' => $campaign['blog_banner']['href'],
  );
  $form['campaign']['blog_banner']['alt'] = array(
    '#type' => 'textfield',
    '#title' => t('Alternative text'),
    '#description' => t('The alternative text for the banner image. Note! The alternative text specified per image basis will not be used.'),
    '#maxlength' => 255,
    '#default_value' => $campaign['blog_banner']['alt'],
  );
  $form['campaign']['blog_banner']['file_help'] = array(
    '#markup' => '<h3>' . t('Banner images') . '</h3>'
      . '<p>' . t('Setting a filename renames the file once this form is saved, which is useful when uploading new images. If a file already exists with the same name (within the campaign), it will be replaced without warning!') . '</p>',
  );

  for ($i = 1; $i <= $form_state['num_blog_banners']; $i++) {
    $idx = $i - 1;
    $form['campaign']['blog_banner']['images'][$idx]['filename'] = array(
      '#type' => 'textfield',
      '#title' => t('Filename'),
      '#description' => t('Eg. %filename', array('%filename' => 'jouluiloa2013-banner-200x100.png')),
      '#maxlength' => 255,
      '#default_value' => isset($campaign['blog_banner']['images'][$idx]['filename']) ? $campaign['blog_banner']['images'][$idx]['filename'] : '',
      '#prefix' => '<div class="campaign-edit-form-column">',
      '#suffix' => '</div>',
    );
    $form['campaign']['blog_banner']['images'][$idx]['file'] = array(
      '#type' => 'managed_file',
      '#title' => t('Image'),
      '#default_value' => isset($campaign['blog_banner']['images'][$idx]['file']) ? $campaign['blog_banner']['images'][$idx]['file'] : NULL,
      '#upload_location' => CAMPAIGN_BANNER_UPLOAD_DIR . $namespace . '/',
      '#upload_validators' => array(
        'file_validate_extensions' => array('jpg gif png'),
      ),
    );
  }

  $form['campaign']['blog_banner']['add_image'] = array(
    '#type' => 'submit',
    '#value' => t('Add another banner image'),
    '#submit' => array('campaign_banner_add_one'),
    '#ajax' => array(
      'callback' => 'campaign_add_more_callback',
      'wrapper' => 'campaign-wrapper',
    ),
    '#prefix' => '<div class="campaign-edit-form-add_more">',
    '#suffix' => '</div>',
  );

  // Store the original images used so we can compare and delete
  $form_state['original_blog_banner_images'] = $campaign['blog_banner']['images'];

  global $base_url;
  // A http path to the modules directory
  $module_url = $base_url . base_path() . drupal_get_path('module', 'campaign_banner');
  // The HTML snippet of the banner images, unescaped!
  $html_snippet = _campaign_banner_generate_snippet(array(
    'script' => $module_url . '/' . CAMPAIGN_BANNER_SCRIPT,
    'campaign' => $namespace
  ) + $campaign['blog_banner']);

  $form['campaign']['blog_banner']['html_snippet'] = array(
    '#markup' => '<div class="html-snippet-wrapper"><hr>'
      . '<textarea id="campaign_banner-html_snippet">' . htmlspecialchars($html_snippet) . '</textarea>'
      . '<p>' . t('Copy the following snippet into your page source. Feel free to rearrange within the wrapping %el. You need to save this form before copying the snippet!', array('%el' => '<div>')) . '</p>'
      . '</div>',
  );
}

/**
 * Implements hook_campaign_summary_alter().
 */
function campaign_banner_campaign_summary_alter(&$summary, $context) {
  $campaign = campaign_get_from_context($context);
  $info = t('!link', array(
    '!link' => l(t('Display counter'), 'admin/config/campaigns/campaign-counters', array(
      'query' => array('campaign' => $context->name, 'type' => CAMPAIGN_BANNER_ID)
    )),
  ));
  $summary[] = array(t('Blog Banner'), $info);
}

/**
 * Implements hook_form_campaign_context_rename_alter().
 */
function campaign_banner_form_campaign_context_rename_form_alter(&$form, &$form_state) {
  $form['#submit'][] = 'campaign_banner_rename_submit';
}

/**
 * Hook into campaign renames and change the directory of the images.
 */
function campaign_banner_rename_submit($form, &$form_state) {
  $namespace = $form_state['values']['name'];
  $campaign = campaign_get($namespace);
  foreach ($campaign['blog_banner']['images'] as $image) {
    if (isset($image['file'])) {
      $dir = CAMPAIGN_BANNER_UPLOAD_DIR . $namespace . '/';
      $filepath = $dir . $image['filename'];
      if (file_prepare_directory($dir, FILE_CREATE_DIRECTORY)) {
        $file = file_load($image['file']);
        $file = file_move($file, $filepath, FILE_EXISTS_REPLACE);
      }
    }
  }
}
/**
 * Implements hook_form_campaign_context_clone_alter().
 */
function campaign_banner_form_campaign_context_clone_form_alter(&$form, &$form_state) {
  $form['#submit'][] = 'campaign_banner_clone_submit';
}

/**
 * Hook into campaign clone and copy the images to the new directory.
 */
function campaign_banner_clone_submit($form, &$form_state) {
  $namespace = $form_state['values']['name'];
  $campaign = campaign_get($namespace);

  foreach ($campaign['blog_banner']['images'] as &$image) {
    if (isset($image['file'])) {
      $dir = CAMPAIGN_BANNER_UPLOAD_DIR . $namespace . '/';
      $filepath = $dir . $image['filename'];
      if (file_prepare_directory($dir, FILE_CREATE_DIRECTORY)) {
        $file = file_load($image['file']);
        $file = file_copy($file, $filepath, FILE_EXISTS_REPLACE);
        $image['file'] = $file->fid;
        file_usage_add($file, 'campaign', 'campaign', 1);
      }
    }
  }
  context_save($campaign);
}

/**
 * AJAX callback
 */
function campaign_banner_add_one($form, &$form_state) {
  $form_state['num_blog_banners']++;
  $form_state['rebuild'] = TRUE;
}

/**
 * Implements hook_campaign_save_alter().
 */
function campaign_banner_campaign_save_alter($form, $form_state, &$context) {
  $campaign = &$context->reactions['campaign_context_reaction']['campaign'];

  // Remove submit buttons value so that it's not saved in the context.
  unset($campaign['blog_banner']['add_image']);

  // Iterate over all image fields renaming, deleting and uploading accordingly.
  foreach ($form_state['values']['campaign']['blog_banner']['images'] as $idx => $image) {
    if (empty($image['file'])) {
      unset($campaign['blog_banner']['images'][$idx]);

      // If a file was removed, delete it.
      if (isset($form_state['original_blog_banner_images'][$idx]['file'])) {
        $file = file_load($form_state['original_blog_banner_images'][$idx]['file']);
        file_usage_delete($file, 'campaign', 'campaign', 1);
        file_delete($file);
      }
      continue;
    }

    $file = file_load($image['file']);
    // public://blog_banners/CAMPAIGN/filename
    $filepath = CAMPAIGN_BANNER_UPLOAD_DIR . $context->name . '/' . $image['filename'];

    $is_new = $file->status != FILE_STATUS_PERMANENT;
    $is_rename = $file->uri != $filepath;

    if ($is_new) {
      $file->status = FILE_STATUS_PERMANENT;
    }
    if ($is_rename) {
      // Rename the file and move it to the new path.
      $file->filename = $image['filename'];
      $file = file_move($file, $filepath, FILE_EXISTS_REPLACE);
    }
    if ($is_new) {
      file_usage_add($file, 'campaign', 'campaign', 1);
    }
  }
  // Reindex array
  $campaign['blog_banner']['images'] = array_values($campaign['blog_banner']['images']);
}

/**
 * Generate a HTML snippet.
 *
 * @param array $config
 *  - script: The script file for rendering images. CAMPAIGN_BANNER_SCRIPT
 *  - href: The link destination
 *  - alt: The alternative text for the images
 *  - campaign: the machine readable campaign name
 *  - images: An array of images, each one given as an array containing a
 *            filename attribute.
 */
function _campaign_banner_generate_snippet($config) {
  $snippet = '<div class="banner-generator-wrapper"' . drupal_attributes(array(
    'data-href' => $config['href'],
    'data-alt' => $config['alt'],
  )) . '>';

  foreach ($config['images'] as $image) {
    $snippet .= "\n  "
      . '<a class="banner-generator" href="' . $config['href'] . '">'
        . '<img src="' . $config['script'] . '?campaign=' . $config['campaign'] . '&image=' . $image['filename'] . '" />'
      . '</a>';
  }
  $snippet .= "\n  <textarea></textarea>\n</div>";
  return $snippet;
}
